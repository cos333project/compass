# Generated by Django 4.2.5 on 2023-10-29 07:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Administrator"), ("student", "Student")],
                        default="student",
                        max_length=25,
                    ),
                ),
                ("class_year", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AcademicTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("term_code", models.CharField(max_length=10, unique=True)),
                ("suffix", models.CharField(max_length=10)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=4)),
                ("name", models.CharField(max_length=100)),
                ("active_until", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "Certificate",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("guid", models.CharField(default=None, max_length=50)),
                ("course_id", models.CharField(max_length=10, null=True)),
                ("catalog_number", models.CharField(max_length=10, null=True)),
                ("title", models.CharField(default="", max_length=150)),
                ("description", models.TextField(default="")),
                ("pu_flag", models.CharField(blank=True, max_length=1, null=True)),
                (
                    "transcript_title",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("long_title", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "distribution_area_long",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "distribution_area_short",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("reading_writing_assignment", models.TextField(blank=True, null=True)),
                (
                    "grading_basis",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("reading_list", models.TextField(blank=True, null=True)),
                ("drop_consent", models.CharField(blank=True, max_length=1, null=True)),
                ("add_consent", models.CharField(blank=True, max_length=1, null=True)),
                ("web_address", models.URLField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Course",
            },
        ),
        migrations.CreateModel(
            name="CourseBucket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(default="")),
                ("category", models.CharField(blank=True, max_length=50, null=True)),
                ("courses", models.ManyToManyField(to="compass.course")),
            ],
        ),
        migrations.CreateModel(
            name="Degree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "degree_type",
                    models.CharField(
                        choices=[
                            ("AB", "Bachelor of Arts"),
                            ("BSE", "Bachelor of Science in Engineering"),
                        ],
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=4, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "Department",
            },
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("emplid", models.CharField(max_length=50, unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("full_name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Major",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=10)),
                ("name", models.CharField(max_length=100)),
                (
                    "degree_type",
                    models.CharField(
                        choices=[
                            ("AB", "Bachelor of Arts"),
                            ("BSE", "Bachelor of Science in Engineering"),
                        ],
                        max_length=3,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Minor",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=10)),
                ("name", models.CharField(max_length=100)),
                ("compatible_with", models.CharField(max_length=10, null=True)),
                (
                    "max_courses_double_dipped",
                    models.IntegerField(blank=True, null=True),
                ),
                ("max_courses_from_major", models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name="UserCourses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "semester",
                    models.IntegerField(
                        choices=[
                            (1, "freshman fall"),
                            (2, "freshman spring"),
                            (3, "sophomore fall"),
                            (4, "sophomore spring"),
                            (5, "junior fall"),
                            (6, "junior spring"),
                            (7, "senior fall"),
                            (8, "senior spring"),
                        ]
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planned", "Planned"),
                            ("in-progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="planned",
                        max_length=20,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="compass.course"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("track", models.CharField(max_length=5)),
                ("seat_reservations", models.CharField(max_length=1)),
                ("class_number", models.IntegerField(unique=True)),
                ("capacity", models.IntegerField()),
                ("enrollment", models.IntegerField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="compass.course"
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compass.instructor",
                    ),
                ),
                (
                    "term",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.academicterm",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Prerequisites",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("required", models.BooleanField(default=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_prerequisites",
                        to="compass.course",
                    ),
                ),
                (
                    "prerequisite",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="required_by_courses",
                        to="compass.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MinorRequirement",
            fields=[
                (
                    "deadline",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "freshman fall"),
                            (2, "freshman spring"),
                            (3, "sophomore fall"),
                            (4, "sophomore spring"),
                            (5, "junior fall"),
                            (6, "junior spring"),
                            (7, "senior fall"),
                            (8, "senior spring"),
                        ],
                        null=True,
                    ),
                ),
                ("double_counting_allowed", models.BooleanField(default=False)),
                ("pdfs_allowed", models.BooleanField(default=True)),
                (
                    "operator",
                    models.CharField(
                        choices=[("AND", "And"), ("OR", "Or")],
                        default="AND",
                        max_length=3,
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.TextField(default="")),
                ("min_needed", models.IntegerField()),
                (
                    "course_bucket",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compass.coursebucket",
                    ),
                ),
                ("courses", models.ManyToManyField(to="compass.course")),
                (
                    "degree",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.degree",
                    ),
                ),
                (
                    "minor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirements",
                        to="compass.minor",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MajorRequirement",
            fields=[
                (
                    "deadline",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "freshman fall"),
                            (2, "freshman spring"),
                            (3, "sophomore fall"),
                            (4, "sophomore spring"),
                            (5, "junior fall"),
                            (6, "junior spring"),
                            (7, "senior fall"),
                            (8, "senior spring"),
                        ],
                        null=True,
                    ),
                ),
                ("double_counting_allowed", models.BooleanField(default=False)),
                ("pdfs_allowed", models.BooleanField(default=True)),
                (
                    "operator",
                    models.CharField(
                        choices=[("AND", "And"), ("OR", "Or")],
                        default="AND",
                        max_length=3,
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.TextField(default="")),
                ("min_needed", models.IntegerField()),
                (
                    "course_bucket",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compass.coursebucket",
                    ),
                ),
                ("courses", models.ManyToManyField(to="compass.course")),
                (
                    "degree",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.degree",
                    ),
                ),
                (
                    "major",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="compass.major"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IndependentWork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(default="")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("JP", "Junior Paper"),
                            ("ST", "Senior Thesis"),
                            ("PR", "Project"),
                            ("M", "Minor"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "completed_by_semester",
                    models.IntegerField(
                        choices=[
                            (1, "freshman fall"),
                            (2, "freshman spring"),
                            (3, "sophomore fall"),
                            (4, "sophomore spring"),
                            (5, "junior fall"),
                            (6, "junior spring"),
                            (7, "senior fall"),
                            (8, "senior spring"),
                        ]
                    ),
                ),
                (
                    "degree",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="compass.degree"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="degree",
            name="department",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="compass.department",
            ),
        ),
        migrations.CreateModel(
            name="CourseEquivalent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "equivalence_type",
                    models.CharField(
                        choices=[
                            ("CROSS_LIST", "Cross-Listing"),
                            ("REQUIREMENT", "Requirement Fulfillment"),
                        ],
                        default="REQUIREMENT",
                        max_length=12,
                    ),
                ),
                (
                    "equivalent_course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equivalents",
                        to="compass.course",
                    ),
                ),
                (
                    "primary_course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_equivalents",
                        to="compass.course",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="department",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="compass.department",
            ),
        ),
        migrations.CreateModel(
            name="ClassYearEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("class_year", models.IntegerField()),
                ("enrl_seats", models.IntegerField()),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.section",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClassMeeting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("meeting_number", models.PositiveIntegerField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("room", models.CharField(max_length=50)),
                ("days", models.CharField(max_length=20)),
                ("building_code", models.CharField(max_length=50)),
                ("building_name", models.CharField(max_length=255)),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.section",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CertificateRequirement",
            fields=[
                (
                    "deadline",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "freshman fall"),
                            (2, "freshman spring"),
                            (3, "sophomore fall"),
                            (4, "sophomore spring"),
                            (5, "junior fall"),
                            (6, "junior spring"),
                            (7, "senior fall"),
                            (8, "senior spring"),
                        ],
                        null=True,
                    ),
                ),
                ("double_counting_allowed", models.BooleanField(default=False)),
                ("pdfs_allowed", models.BooleanField(default=True)),
                (
                    "operator",
                    models.CharField(
                        choices=[("AND", "And"), ("OR", "Or")],
                        default="AND",
                        max_length=3,
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.TextField(default="")),
                ("min_needed", models.IntegerField()),
                (
                    "certificate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.certificate",
                    ),
                ),
                (
                    "course_bucket",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="compass.coursebucket",
                    ),
                ),
                ("courses", models.ManyToManyField(to="compass.course")),
                (
                    "degree",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="compass.degree",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="certificate",
            name="departments",
            field=models.ManyToManyField(to="compass.department"),
        ),
        migrations.AddField(
            model_name="customuser",
            name="major",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="compass.major",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="minors",
            field=models.ManyToManyField(to="compass.minor"),
        ),
        migrations.AddField(
            model_name="customuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
